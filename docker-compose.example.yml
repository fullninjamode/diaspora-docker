version: '2.3'

services:
  postgres:
    container_name: diaspora_postgres
    image: postgres:latest
    restart: always
    volumes:
      - /data/diaspora/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=diaspora
      - POSTGRES_PASSWORD=<PASS>
      - POSTGRES_DB=diaspora_production
    networks:
      - backend

  redis:
    container_name: diaspora_redis
    image: redis:latest
    restart: always
    volumes:
      - /data/diaspora/redis:/data
    networks:
      - backend

  unicorn:
    container_name: diaspora_unicorn
    image: 0ne1/diaspora:0.7.14.0
    restart: always
    command: bin/bundle exec unicorn -c config/unicorn.rb -E production
    volumes:
      - /data/diaspora/public:/diaspora/public
      - ./diaspora.yml:/diaspora/config/diaspora.yml
      - ./database.yml:/diaspora/config/database.yml
    depends_on:
      - postgres
      - redis
    networks:
      - backend

  sidekiq:
    container_name: diaspora_sidekiq
    image: 0ne1/diaspora:0.7.14.0
    restart: always
    command: bin/bundle exec sidekiq
    volumes:
      - /data/diaspora/public:/diaspora/public
      - ./diaspora.yml:/diaspora/config/diaspora.yml
      - ./database.yml:/diaspora/config/database.yml
    depends_on:
      - postgres
      - redis
    networks:
      - backend

  nginx:
    container_name: diaspora_nginx
    image: nginx:stable
    restart: always
    environment:
      - VIRTUAL_HOST=diaspora.example.com
      - VIRTUAL_PORT=80
      - LETSENCRYPT_HOST=diaspora.example.com
      - LETSENCRYPT_EMAIL=mail@example.com
    volumes:
      - ./nginx-vhost.conf:/etc/nginx/conf.d/default.conf:ro
      - /data/diaspora/data:/var/www/html
    networks:
      - reverse-proxy
      - backend
    ports:
      - 80

networks:
  backend:
  reverse-proxy:
    external: true
